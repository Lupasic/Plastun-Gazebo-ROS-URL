<launch>

<!-- activate amcl + move base + others -->
  <include file="$(find plastun_navigation)/launch/amcl.launch"/>

<!-- activate move global_control_system (clients for all servers) -->
  <node name="global_control_system" pkg="plastun_global_control_system" type="global_control_system" respawn="false" output="screen">
  	<param name="laser_duration" value="5"/>
    <param name="camera_info_topic" value="/wide_camera/camera_info"/>
    <param name="target_points_topic" value="/target_points" />
  </node>

<!-- activate general targeting server -->
  <node name="general_targeting" pkg="plastun_general_targeting" type="general_targeting" respawn="false" output="screen">
  	<param name="lengh_to_cam_xy" value="0.21" />
  	<param name="lengh_to_cam_yz" value="0.1" />
  </node>

<!-- activate image detect server -->
  <node name="image_detect" pkg="plastun_image_detect" type="image_detect" respawn="false" output="screen">
  	<param name="cascad" value="$(find plastun_image_detect)/cascads/plafon_url_new/cascade.xml" />
    <param name="suscribe_camera_topic" value="/wide_camera/image_raw" />
    <param name="image_transport" value="compressed" />
</node>

<!-- activate rotate turret server-->
<!--  <include file="$(find plastun_rotate_turret)/launch/rotate_turret.launch" /> -->

<!-- activate activating laser server -->
<!--  <include file="$(find plastun_activate_laser)/launch/activate_laser.launch" /> -->

<!-- static_transform_publisher x y z yaw pitch roll frame_id child_frame_id period_in_ms 
or
static_transform_publisher x y z qx qy qz qw frame_id child_frame_id  period_in_ms -->

<node pkg="tf" type="static_transform_publisher" name="base_link_to_turrel_vniz_broadcaster" args="0.15 0 0 0 0 0 base_link turrel_vniz 100" />


</launch>
